name: Continuous Integration (CI)

on:
  pull_request:

permissions:
        contents: read # for actions/checkout to fetch code
        security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
        checks: write
        
jobs:
    job1: 
      name: Run HTML Unit Test
      runs-on: ubuntu-latest
      steps:
        - name: checkout code
          uses: actions/checkout@v3

        - name: Install Node.js
          uses: actions/setup-node@v2
          with:
            node-version: 16
        
        - name: Install Puppeteer
          run: npm install puppeteer

        - name: Run Tests
          run: node test/index.test.js

        
    job2:
      name: Run CSS lint Test
      runs-on: ubuntu-latest
      needs: job1
      steps:
        - name: Check out Git repository
          uses: actions/checkout@v3

        - name: Install Node.js
          uses: actions/setup-node@v2
          with:
            node-version: 16

        - name: Install Depedencies
          run: |
            npm ci
  
        - name: Run linters
          #run: npx stylelint "**/*.css" --fix
          uses: wearerequired/lint-action@v2.3.0
          continue-on-error: true
          with:
            stylelint: true
            auto_fix: true
    
    job3:
      name: Run Snyk Vulnerability test
      runs-on: ubuntu-latest
      needs: job2
      steps:
        - name: Check out code
          uses: actions/checkout@v3
          
        - name: Set up Snyk CLI to check for security issues
          uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
          # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
        - name: Snyk Open Source monitor
          run: snyk monitor --all-projects
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
          # Runs Snyk Infrastructure as Code (IaC) analysis and uploads result to Snyk.
          # Use || true to not fail the pipeline.
        - name: Snyk IaC test and report
          run: snyk iac test --report || true
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
        - name: Run Snyk to check configuration files for security issues
          continue-on-error: true
          uses: snyk/actions/iac@master
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          with:
              args: --sarif-file-output=snyk.sarif
  
          # Push the Snyk Code results into GitHub Code Scanning tab
        - name: Upload result to GitHub Code Scanning
          uses: github/codeql-action/upload-sarif@v2
          with:
            sarif_file: snyk.sarif

    job4:
      name: Run SonarCloud Scan
      runs-on: ubuntu-latest
      needs: job3
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0  

        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            
    job5:
      name: Run GitGuardian scan
      runs-on: ubuntu-latest
      needs: job4
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0 # fetch all history so multiple commits can be scanned
        - name: GitGuardian scan
          uses: GitGuardian/ggshield/actions/secret@main
          env:
            GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
            GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
            GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
            GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
            GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        
        - name: GitGuardian iac scan
          uses: GitGuardian/ggshield/actions/iac@main
          #with:
            #args: ./terraform/ --minimum-severity CRITICAL # pass arguments to the action. If missing, will scan the current directory
          env:
            GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}


    job6:
      name: Run Terraform Plan
      runs-on: ubuntu-latest
      needs: job5
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
    
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: "1.1.7"
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
        - name: Terraform Init
          run: 
            terraform -chdir=terraform init
    
        - name: Terraform Validate
          run:
            terraform -chdir=terraform validate 
    
        - name: Terraform Plan 
          run: 
            terraform -chdir=terraform plan